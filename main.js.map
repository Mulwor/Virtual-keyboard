{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./keyboard/scripts/eng.js","webpack:///./keyboard/scripts/rus.js","webpack:///./keyboard/scripts/script.js"],"sourcesContent":["export const forEnglish = ['`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\r\n  'Tab', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', '\\\\',\r\n  'CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', \"'\", 'Enter',\r\n  'Shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '↑', 'Shift',\r\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\r\nexport const forEnglishShift = ['~', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', 'Backspace',\r\n  'Tab', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}', '|',\r\n  'CapsLock', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '\"', 'Enter',\r\n  'Shift', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', '<', '>', '?', '↑', 'Shift',\r\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\r\nexport const forEnglishCaps = ['`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\r\n  'Tab', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '[', ']', '\\\\',\r\n  'CapsLock', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '\"', 'Enter',\r\n  'Shift', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', ',', '.', '/', '↑', 'Shift',\r\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\r\n","export const forRussian = ['ё', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\r\n  'Tab', 'й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ъ', '\\\\',\r\n  'CapsLock', 'ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', 'Enter',\r\n  'Shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', '/', '↑', 'Shift',\r\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\r\nexport const forRussianShift = ['Ё', '!', '\"', '№', ';', '%', ':', '?', '*', '(', ')', '_', '+', 'Backspace',\r\n  'Tab', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'З', 'Х', 'Ъ', '/',\r\n  'CapsLock', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Enter',\r\n  'Shift', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', ',', '↑', 'Shift',\r\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\r\nexport const forRussianCaps = ['Ё', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\r\n  'Tab', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'З', 'Х', 'Ъ', '\\\\',\r\n  'CapsLock', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Enter',\r\n  'Shift', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', '.', '↑', 'Shift',\r\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\r\n","import '../style.css';\r\nimport { forEnglish, forEnglishCaps, forEnglishShift } from './eng.js';\r\nimport { forRussian, forRussianCaps, forRussianShift } from './rus.js';\r\n\r\n// Cоздания области, в которую я буду записать буковки и цифры\r\nconst textArea = document.createElement('textarea'); // В HTML-документах создаёт элемент c тем тегом, что указан в аргументе или HTMLUnknownElement, если имя тега не распознаётся.\r\ntextArea.setAttribute('placeholder', 'Привет дорогой друг, это моя первая работа с домом. \\nПрошу тебя иди строга по кросс-чеку. Не придумывай ничего своего. \\nБлагодарю'); // Текст, который будет находится внутри элемента => ::placeholder представляет собой текст placeholder (en-US) в <textarea> (en-US) элементах.\r\ndocument.body.prepend(textArea); // node.prepend(...nodes or strings) – вставляет узел в начало.\r\n\r\n// Для будущей отрисовки самой клавиатуры\r\nconst digitCodes = ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace',\r\n  'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'Key{', 'Key}', 'Keyslesh',\r\n  'CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Double-colon', 'Quote', 'Enter',\r\n  'ShiftL', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Point', 'Question', 'ArrowUp', 'ShiftR',\r\n  'ControlLeft', 'Win', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight'];\r\n\r\nlet capsLock = false;\r\nlet shift = false;\r\nlet language = sessionStorage.getItem('chooseLanguage') ? sessionStorage.getItem('chooseLanguage') : 'rus';\r\n\r\nconst klavitereishn = () => {\r\n  let keyboard;\r\n  sessionStorage.setItem('chooseLanguage', language); /* Свойство sessionStorage позволяет\r\n  получить доступ к объекту Storage текущей сессии и добавляет данные в него используя setItem */\r\n  // Начальное положение клавиатуры\r\n  if (language === 'rus') { // Если используем русскую клавиатуру\r\n    keyboard = forRussian;\r\n    // Если используем больше буквы\r\n    if (capsLock) {\r\n      keyboard = forRussianCaps;\r\n      // Если зажимаешь шифт\r\n    } else if (shift) {\r\n      keyboard = forRussianShift;\r\n    }\r\n  } else if (language === 'eng') { // Если используем английскую клавиатуру\r\n    keyboard = forEnglish;\r\n    if (capsLock) {\r\n      keyboard = forEnglishCaps;\r\n    } else if (shift) {\r\n      keyboard = forEnglishShift;\r\n    }\r\n  }\r\n\r\n  /* document.activeElement => Элемент, на котором будут вызываться\r\n  события клавиатуры, если пользователь начнет ввод текста */\r\n  if (!(document.activeElement === textArea)) {\r\n    // Элемент получает фокус, когда пользователь кликает по нему или использует клавишу Tab\r\n    textArea.focus();\r\n  }\r\n\r\n  // Добавляем непосредственно саму клавиатуру\r\n  const klavitereishnWrite = () => {\r\n    /* Document метод querySelector() возвращает первый элемент\r\n    (Element) документа, который соответствует указанному селектору или группе селекторов\r\n    */\r\n    let laptopKeyboard = document.querySelector('.keyboard');\r\n    if (laptopKeyboard) {\r\n      let breaks = 0;\r\n      for (let set = 0; set < laptopKeyboard.children.length; set += 1) {\r\n        if (laptopKeyboard.children[set].nodeName !== 'DIV') {\r\n          breaks += 1;\r\n        } else {\r\n          laptopKeyboard.children[set].innerHTML = keyboard[set - breaks];\r\n        }\r\n      }\r\n    } else {\r\n      // Создаем непосредственно саму клавиатуру\r\n      laptopKeyboard = document.createElement('div');\r\n      let collection = '';\r\n      laptopKeyboard.classList.add('keyboard');\r\n\r\n      laptopKeyboard.addEventListener('mousedown', (click) => {\r\n        click.preventDefault();\r\n      });\r\n\r\n      // Обращаемся к строке 47 и просим нарисовать все элементы c классами\r\n      digitCodes.forEach((value, index) => {\r\n        let classification = '';\r\n        if (value === 'Backspace') {\r\n          classification = 'backspace origin';\r\n        } else if (value === 'Tab') {\r\n          classification = 'tab origin';\r\n        } else if (value === 'Keyslesh') {\r\n          classification = 'keysleft origin';\r\n        } else if (value === 'CapsLock') {\r\n          classification = 'capsLock origin';\r\n        } else if (value === 'Enter') {\r\n          classification = 'specialEnter origin';\r\n        } else if (value === 'ShiftL') {\r\n          classification = 'specialShift origin';\r\n        } else if (value === 'ShiftR') {\r\n          classification = 'specialShiftTwo origin';\r\n        } else if (value === 'ControlLeft') {\r\n          classification = 'controlL origin';\r\n        } else if (value === 'Space') {\r\n          classification = 'specialSpace origin';\r\n        }\r\n\r\n        // Вставляем класс к тегам\r\n        collection += `<div class=\"key ${classification}\" data-code=\"${value}\">${keyboard[index]}</div>`;\r\n\r\n        // Следующий код гласит, в какой части элемента необходимо новая строка\r\n        const breaks = [13, 27, 40, 53];\r\n        if (breaks.includes(index)) {\r\n          collection += '<br>';\r\n        }\r\n      });\r\n\r\n      // innerHtml получает HTML рамзетку\r\n      laptopKeyboard.innerHTML = collection;\r\n      /* Document метод querySelector() возвращает первый элемент (Element)\r\n       документа, который соответствует указанному селектору или группе селекторов */\r\n      const exist = document.querySelector('.keyboard');\r\n      if (exist) {\r\n        exist.replaceWith(laptopKeyboard); // Метод .replaceWith() заменяет одни элементы другими.\r\n      } else {\r\n        textArea.after(laptopKeyboard); // Метод .after() добавляет текст после заданного элемента.\r\n      }\r\n    }\r\n  };\r\n  klavitereishnWrite();\r\n};\r\nklavitereishn();\r\n\r\nfunction animation(click) {\r\n  const clicebel = click.target;\r\n  // getAttribute - получаем объект\r\n  if (clicebel && digitCodes.includes(clicebel.getAttribute('data-code'))) {\r\n    // добавляем класс\r\n    clicebel.classList.add('cartoon');\r\n  }\r\n}\r\n\r\nfunction clearHigh(click) {\r\n  const clicebel = click.target;\r\n  const definedKey = clicebel ? clicebel.getAttribute('data-code') : '';\r\n  if (definedKey ==='ShiftL' ) {\r\n    shift = false;\r\n    klavitereishn();\r\n  } else if (definedKey === 'ShiftR') {\r\n    shift = false;\r\n    klavitereishn();\r\n  }\r\n  if (definedKey !== 'CapsLock' || capsLock === false) {\r\n    setTimeout(() => {\r\n      if (clicebel) {\r\n        // Возвращаем в первоначальный вариант\r\n        clicebel.classList.remove('cartoon');\r\n      }\r\n    }, 200);\r\n  }\r\n}\r\n\r\n// Нажатие на клавиатуру\r\nconst clickOnKeyboard = (click) => {\r\n  if (document.activeElement !== textArea) {\r\n    textArea.focus();\r\n  }\r\n\r\n  /* Отмена действия браузера => для отмены действия браузера существует\r\n  стандартный метод event.preventDefault(). */\r\n  click.preventDefault();\r\n  const newClick = { ...click };\r\n  newClick.shiftOnKeyboard = click.shiftOnKeyboard;\r\n  newClick.altOnKeyboard = click.altOnKeyboard;\r\n  newClick.moreTimes = click.moreTimes;\r\n  newClick.target = document.querySelector(`[data-code=${click.code}]`);\r\n  return newClick;\r\n};\r\n\r\nconst clickKeyboard = (click) => {\r\n  animation(click);\r\n  if (click.shiftOnKeyboard && click.altOnKeyboard && !click.moreTimes) {\r\n    if (language == 'rus') {\r\n       'eng'\r\n    } else {\r\n       'rus'\r\n    }\r\n  }\r\n\r\n  const definedKey = click.target ? click.target.getAttribute('data-code') : '';\r\n  const write = textArea.selectionStart;\r\n\r\n  // Добавление символов на клавиатуру\r\n  if (click.target && [...click.target.classList].indexOf('origin') === -1 && [...click.target.classList].indexOf('key') !== -1) {\r\n    let spacendr = click.target.innerHTML;\r\n    textArea.value = textArea.value.substring(0, write) + spacendr + textArea.value.substring(write);\r\n    textArea.setSelectionRange(write + 1, write + 1);\r\n  }\r\n\r\n  if (definedKey === 'Space') {\r\n    let spacendr = click.target.innerHTML;\r\n    spacendr = spacendr === 'Space' ? \" \" : spacendr;\r\n    textArea.value = textArea.value.substring(0, write) + spacendr + textArea.value.substring(write);\r\n  }\r\n\r\n  // Необходимо что при нажатии на backspace текст удалял какой-либо элемиент\r\n  if (definedKey === 'Backspace' && write > 0) {\r\n    textArea.value = textArea.value.substring(0, write - 1) + textArea.value.substring(write);\r\n    textArea.setSelectionRange(write - 1, write - 1);\r\n  }\r\n\r\n  // При нажатии, чтобы все символы на экране отображался с большими буквами\r\n  if (definedKey === 'CapsLock') {\r\n    capsLock = !capsLock;\r\n    klavitereishn();\r\n  }\r\n  // Работает только левый шифт, на будущее: необходимо, чтобы работал и правы\r\n  if (definedKey === 'ShiftL') {\r\n      shift =! shift;\r\n      klavitereishn();\r\n  }\r\n\r\n  if (definedKey === 'ShiftR') {\r\n      shift =! shift;\r\n      klavitereishn();\r\n  }\r\n\r\n  if (definedKey === 'Tab') {\r\n    const tabulation = textArea.selectionStart;\r\n    textArea.value = `${textArea.value.substring(0, tabulation)}  ${textArea.value.substring(tabulation)}`;\r\n    textArea.setSelectionRange(tabulation + 4, tabulation + 4);\r\n  }\r\n\r\n  if (definedKey === 'Enter') {\r\n    textArea.value = `${textArea.value.substring(0, write)}\\n${textArea.value.substring(write)}`;\r\n    textArea.setSelectionRange(write + 1, write + 1);\r\n    return null;\r\n  }\r\n  return null;\r\n\r\n};\r\n\r\ndocument.addEventListener('keyup', (click) => clearHigh(clickOnKeyboard(click)));\r\ndocument.addEventListener('keydown', (click) => clickKeyboard(clickOnKeyboard(click)));\r\ndocument.addEventListener('mousedown', animation);\r\ndocument.addEventListener('mousedown', (click) => clickKeyboard(click));\r\ndocument.addEventListener('mouseup', (click) => clearHigh(click));\r\n"],"names":["forEnglish","forEnglishShift","forEnglishCaps","forRussian","forRussianShift","forRussianCaps","textArea","document","createElement","setAttribute","body","prepend","digitCodes","capsLock","shift","language","sessionStorage","getItem","klavitereishn","keyboard","setItem","activeElement","focus","laptopKeyboard","querySelector","breaks","set","children","length","nodeName","innerHTML","collection","classList","add","addEventListener","click","preventDefault","forEach","value","index","classification","includes","exist","replaceWith","after","klavitereishnWrite","animation","clicebel","target","getAttribute","clearHigh","definedKey","setTimeout","remove","clickOnKeyboard","newClick","shiftOnKeyboard","altOnKeyboard","moreTimes","code","clickKeyboard","write","selectionStart","indexOf","spacendr","substring","setSelectionRange","tabulation"],"sourceRoot":""}