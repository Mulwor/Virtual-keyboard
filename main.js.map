{"version":3,"file":"main.js","mappings":"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","sources":["webpack:///./keyboard/scripts/eng.js","webpack:///./keyboard/scripts/rus.js","webpack:///./keyboard/scripts/script.js"],"sourcesContent":["export const forEnglish = ['`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\n  'Tab', 'q', 'w', 'e', 'r', 't', 'y', 'u', 'i', 'o', 'p', '[', ']', '\\\\',\n  'CapsLock', 'a', 's', 'd', 'f', 'g', 'h', 'j', 'k', 'l', ';', \"'\", 'Enter',\n  'Shift', 'z', 'x', 'c', 'v', 'b', 'n', 'm', ',', '.', '/', '↑', 'Shift',\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\nexport const forEnglishShift = ['~', '!', '@', '#', '$', '%', '^', '&', '*', '(', ')', '_', '+', 'Backspace',\n  'Tab', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '{', '}', '|',\n  'CapsLock', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '\"', 'Enter',\n  'Shift', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', '<', '>', '?', '↑', 'Shift',\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\nexport const forEnglishCaps = ['`', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\n  'Tab', 'Q', 'W', 'E', 'R', 'T', 'Y', 'U', 'I', 'O', 'P', '[', ']', '\\\\',\n  'CapsLock', 'A', 'S', 'D', 'F', 'G', 'H', 'J', 'K', 'L', ':', '\"', 'Enter',\n  'Shift', 'Z', 'X', 'C', 'V', 'B', 'N', 'M', ',', '.', '/', '↑', 'Shift',\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\n","export const forRussian = ['ё', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\n  'Tab', 'й', 'ц', 'у', 'к', 'е', 'н', 'г', 'ш', 'щ', 'з', 'х', 'ъ', '\\\\',\n  'CapsLock', 'ф', 'ы', 'в', 'а', 'п', 'р', 'о', 'л', 'д', 'ж', 'э', 'Enter',\n  'Shift', 'я', 'ч', 'с', 'м', 'и', 'т', 'ь', 'б', 'ю', '/', '↑', 'Shift',\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\nexport const forRussianShift = ['Ё', '!', '\"', '№', ';', '%', ':', '?', '*', '(', ')', '_', '+', 'Backspace',\n  'Tab', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'З', 'Х', 'Ъ', '/',\n  'CapsLock', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Enter',\n  'Shift', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', ',', '↑', 'Shift',\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\nexport const forRussianCaps = ['Ё', '1', '2', '3', '4', '5', '6', '7', '8', '9', '0', '-', '=', 'Backspace',\n  'Tab', 'Й', 'Ц', 'У', 'К', 'Е', 'Н', 'Г', 'Ш', 'Щ', 'З', 'Х', 'Ъ', '\\\\',\n  'CapsLock', 'Ф', 'Ы', 'В', 'А', 'П', 'Р', 'О', 'Л', 'Д', 'Ж', 'Э', 'Enter',\n  'Shift', 'Я', 'Ч', 'С', 'М', 'И', 'Т', 'Ь', 'Б', 'Ю', '.', '↑', 'Shift',\n  'Ctrl', 'Win', 'Alt', 'Space', 'Alt', '←', '↓', '→', 'Ctrl'];\n","import '../style.css';\nimport { forEnglish, forEnglishCaps, forEnglishShift } from './eng.js';\nimport { forRussian, forRussianCaps, forRussianShift } from './rus.js';\n\n// Cоздания области, в которую я буду записать буковки и цифры\nconst textArea = document.createElement('textarea'); // В HTML-документах создаёт элемент c тем тегом, что указан в аргументе или HTMLUnknownElement, если имя тега не распознаётся.\ntextArea.setAttribute('placeholder', 'Привет дорогой друг, это моя первая работа с домом. \\nПрошу тебя иди строга по кросс-чеку. Не придумывай ничего своего. \\nБлагодарю'); // Текст, который будет находится внутри элемента => ::placeholder представляет собой текст placeholder (en-US) в <textarea> (en-US) элементах.\ndocument.body.prepend(textArea); // node.prepend(...nodes or strings) – вставляет узел в начало.\n\n// Для будущей отрисовки самой клавиатуры\nconst digitCodes = ['Backquote', 'Digit1', 'Digit2', 'Digit3', 'Digit4', 'Digit5', 'Digit6', 'Digit7', 'Digit8', 'Digit9', 'Digit0', 'Minus', 'Equal', 'Backspace',\n  'Tab', 'KeyQ', 'KeyW', 'KeyE', 'KeyR', 'KeyT', 'KeyY', 'KeyU', 'KeyI', 'KeyO', 'KeyP', 'Key{', 'Key}', 'Keyslesh',\n  'CapsLock', 'KeyA', 'KeyS', 'KeyD', 'KeyF', 'KeyG', 'KeyH', 'KeyJ', 'KeyK', 'KeyL', 'Double-colon', 'Quote', 'Enter',\n  'ShiftL', 'KeyZ', 'KeyX', 'KeyC', 'KeyV', 'KeyB', 'KeyN', 'KeyM', 'Comma', 'Point', 'Question', 'ArrowUp', 'ShiftR',\n  'ControlLeft', 'Win', 'AltLeft', 'Space', 'AltRight', 'ArrowLeft', 'ArrowDown', 'ArrowRight', 'ControlRight'];\n\nlet capsLock = false;\nlet shift = false;\nlet language = sessionStorage.getItem('chooseLanguage') ? sessionStorage.getItem('chooseLanguage') : 'rus';\n\nconst klavitereishn = () => {\n  let keyboard;\n  sessionStorage.setItem('chooseLanguage', language); /* Свойство sessionStorage позволяет\n  получить доступ к объекту Storage текущей сессии и добавляет данные в него используя setItem */\n  // Начальное положение клавиатуры\n  if (language === 'rus') { // Если используем русскую клавиатуру\n    keyboard = forRussian;\n    // Если используем больше буквы\n    if (capsLock) {\n      keyboard = forRussianCaps;\n      // Если зажимаешь шифт\n    } else if (shift) {\n      keyboard = forRussianShift;\n    }\n  } else if (language === 'eng') { // Если используем английскую клавиатуру\n    keyboard = forEnglish;\n    if (capsLock) {\n      keyboard = forEnglishCaps;\n    } else if (shift) {\n      keyboard = forEnglishShift;\n    }\n  }\n\n  /* document.activeElement => Элемент, на котором будут вызываться\n  события клавиатуры, если пользователь начнет ввод текста */\n  if (!(document.activeElement === textArea)) {\n    // Элемент получает фокус, когда пользователь кликает по нему или использует клавишу Tab\n    textArea.focus();\n  }\n\n  // Добавляем непосредственно саму клавиатуру\n  const klavitereishnWrite = () => {\n    /* Document метод querySelector() возвращает первый элемент\n    (Element) документа, который соответствует указанному селектору или группе селекторов\n    */\n    let laptopKeyboard = document.querySelector('.keyboard');\n    if (laptopKeyboard) {\n      let breaks = 0;\n      for (let set = 0; set < laptopKeyboard.children.length; set += 1) {\n        if (laptopKeyboard.children[set].nodeName !== 'DIV') {\n          breaks += 1;\n        } else {\n          laptopKeyboard.children[set].innerHTML = keyboard[set - breaks];\n        }\n      }\n    } else {\n      // Создаем непосредственно саму клавиатуру\n      laptopKeyboard = document.createElement('div');\n      let collection = '';\n      laptopKeyboard.classList.add('keyboard');\n\n      laptopKeyboard.addEventListener('mousedown', (click) => {\n        click.preventDefault();\n      });\n\n      // Обращаемся к строке 47 и просим нарисовать все элементы c классами\n      digitCodes.forEach((value, index) => {\n        let classification = '';\n        if (value === 'Backspace') {\n          classification = 'backspace origin';\n        } else if (value === 'Tab') {\n          classification = 'tab origin';\n        } else if (value === 'Keyslesh') {\n          classification = 'keysleft origin';\n        } else if (value === 'CapsLock') {\n          classification = 'capsLock origin';\n        } else if (value === 'Enter') {\n          classification = 'specialEnter origin';\n        } else if (value === 'ShiftL') {\n          classification = 'specialShift origin';\n        } else if (value === 'ShiftR') {\n          classification = 'specialShiftTwo origin';\n        } else if (value === 'ControlLeft') {\n          classification = 'controlL origin';\n        } else if (value === 'Space') {\n          classification = 'specialSpace origin';\n        }\n\n        // Вставляем класс к тегам\n        collection += `<div class=\"key ${classification}\" data-code=\"${value}\">${keyboard[index]}</div>`;\n\n        // Следующий код гласит, в какой части элемента необходимо новая строка\n        const breaks = [13, 27, 40, 53];\n        if (breaks.includes(index)) {\n          collection += '<br>';\n        }\n      });\n\n      // innerHtml получает HTML рамзетку\n      laptopKeyboard.innerHTML = collection;\n      /* Document метод querySelector() возвращает первый элемент (Element)\n       документа, который соответствует указанному селектору или группе селекторов */\n      const exist = document.querySelector('.keyboard');\n      if (exist) {\n        exist.replaceWith(laptopKeyboard); // Метод .replaceWith() заменяет одни элементы другими.\n      } else {\n        textArea.after(laptopKeyboard); // Метод .after() добавляет текст после заданного элемента.\n      }\n    }\n  };\n  klavitereishnWrite();\n};\nklavitereishn();\n\nfunction animation(click) {\n  const clicebel = click.target;\n  // getAttribute - получаем объект\n  if (clicebel && digitCodes.includes(clicebel.getAttribute('data-code'))) {\n    // добавляем класс\n    clicebel.classList.add('cartoon');\n  }\n}\n\nfunction clearHigh(click) {\n  const clicebel = click.target;\n  const definedKey = clicebel ? clicebel.getAttribute('data-code') : '';\n  if (definedKey === ('ShiftL' || 'ShiftR')) {\n    shift = false;\n    klavitereishn();\n  }\n  if (definedKey !== 'CapsLock' || capsLock === false) {\n    setTimeout(() => {\n      if (clicebel) {\n        // Возвращаем в первоначальный вариант\n        clicebel.classList.remove('cartoon');\n      }\n    }, 200);\n  }\n}\n\n// Нажатие на клавиатуру\nconst clickOnKeyboard = (click) => {\n  if (document.activeElement !== textArea) {\n    textArea.focus();\n  }\n\n  /* Отмена действия браузера => для отмены действия браузера существует\n  стандартный метод event.preventDefault(). */\n  click.preventDefault();\n  const newClick = { ...click };\n  newClick.shiftOnKeyboard = click.shiftOnKeyboard;\n  newClick.altOnKeyboard = click.altOnKeyboard;\n  newClick.moreTimes = click.moreTimes;\n  newClick.target = document.querySelector(`[data-code=${click.code}]`);\n  return newClick;\n};\n\nconst clickKeyboard = (click) => {\n  animation(click);\n  if (click.shiftOnKeyboard && click.altOnKeyboard && !click.moreTimes) {\n    language = (language === 'rus') ? 'eng' : 'rus';\n    return null;\n  }\n\n  const definedKey = click.target ? click.target.getAttribute('data-code') : '';\n  const write = textArea.selectionStart;\n\n  // Добавление символов на клавиатуру\n  if (click.target && [...click.target.classList].indexOf('origin') === -1 && [...click.target.classList].indexOf('key') !== -1) {\n    let writeWords = click.target.innerHTML;\n    writeWords = writeWords === 'Space' ? ' ' : writeWords;\n    textArea.value = textArea.value.substring(0, write) + writeWords\n    + textArea.value.substring(write);\n    textArea.setSelectionRange(write + 1, write + 1);\n  }\n\n  // Необходимо что при нажатии на backspace текст удалял какой-либо элемиент\n  if (definedKey === 'Backspace' && write > 0) {\n    textArea.value = textArea.value.substring(0, write - 1) + textArea.value.substring(write);\n    textArea.setSelectionRange(write - 1, write - 1);\n  }\n\n  // При нажатии, чтобы все символы на экране отображался с большими буквами\n  if (definedKey === 'CapsLock') {\n    capsLock = !capsLock;\n    klavitereishn();\n  }\n  // Работает только левый шифт, на будущее: необходимо, чтобы работал и правы\n  if (definedKey === ('ShiftL' || 'ShiftR')) {\n    if (!click.moreTimes) {\n      shift = true;\n      klavitereishn();\n    }\n  }\n  if (definedKey === 'Tab') {\n    const tabulation = textArea.selectionStart;\n    textArea.value = `${textArea.value.substring(0, tabulation)}  ${textArea.value.substring(tabulation)}`;\n    textArea.setSelectionRange(tabulation + 4, tabulation + 4);\n  }\n  return null;\n};\n\ndocument.addEventListener('keyup', (click) => clearHigh(clickOnKeyboard(click)));\ndocument.addEventListener('keydown', (click) => clickKeyboard(clickOnKeyboard(click)));\ndocument.addEventListener('mousedown', animation);\ndocument.addEventListener('mousedown', (click) => clickKeyboard(click));\ndocument.addEventListener('mouseup', (click) => clearHigh(click));\n"],"names":["forEnglish","forEnglishShift","forEnglishCaps","forRussian","forRussianShift","forRussianCaps","textArea","document","createElement","setAttribute","body","prepend","digitCodes","capsLock","shift","language","sessionStorage","getItem","klavitereishn","keyboard","setItem","activeElement","focus","laptopKeyboard","querySelector","breaks","set","children","length","nodeName","innerHTML","collection","classList","add","addEventListener","click","preventDefault","forEach","value","index","classification","includes","exist","replaceWith","after","klavitereishnWrite","animation","clicebel","target","getAttribute","clearHigh","definedKey","setTimeout","remove","clickOnKeyboard","newClick","shiftOnKeyboard","altOnKeyboard","moreTimes","code","clickKeyboard","write","selectionStart","indexOf","writeWords","substring","setSelectionRange","tabulation"],"sourceRoot":""}